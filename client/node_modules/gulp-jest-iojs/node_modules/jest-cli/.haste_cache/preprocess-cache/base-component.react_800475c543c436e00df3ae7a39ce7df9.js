/*istanbul ignore next*/'use strict';Object.defineProperty(exports, "__esModule", { value: true });var _extends = Object.assign || function (target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i];for (var key in source) {if (Object.prototype.hasOwnProperty.call(source, key)) {target[key] = source[key];}}}return target;};var _createClass = function () {function defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function (Constructor, protoProps, staticProps) {if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;};}();exports.default = 






BaseComponent; /*istanbul ignore next*/function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self, call) {if (!self) {throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call && (typeof call === "object" || typeof call === "function") ? call : self;}function _inherits(subClass, superClass) {if (typeof superClass !== "function" && superClass !== null) {throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;}var React = require('react');var ApplicationStore = require('../stores/application-store');var ApplicationActions = require('../actions/application-actions');var Widgets = require('./widgets/widgets-index');var classNames = require('classnames');var _ = require('lodash');function BaseComponent(SubComponent) {/*istanbul ignore next*/var 
  Base = function (_React$Component) {_inherits(Base, _React$Component);
    function Base(props) {/*istanbul ignore next*/_classCallCheck(this, Base); /*istanbul ignore next*/return _possibleConstructorReturn(this, Object.getPrototypeOf(Base).call(this, 
      props));}_createClass(Base, [{ key: 'render', value: function render() 


      {
        var self = this;
        var style = { className: classNames(this.props.componentData.classNames) };

        function icon(component) {
          if (typeof component.icon !== 'undefined') {
            component.icon['fa'] = true;
            var iconStyle = classNames(component.icon);
            return (
              /*istanbul ignore next*/React.createElement( /*istanbul ignore next*/'i', /*istanbul ignore next*/{ className: iconStyle }));} else 

          {
            return false;}}



        function text(component) {
          if (typeof component.templateText !== 'undefined') {
            return component.templateText;} else 
          {
            return false;}}



        function getRef(component) {
          if (typeof component.ref !== 'undefined') {
            return component.ref;} else 
          {
            return {};}}



        function childComponents(componentData) {
          var children = [];

          if (typeof componentData.children !== 'undefined') {
            componentData.children.map(function (child) {
              children.push(child);});} else 

          {
            return false;}


          return children.map(function (child, i) {

            var ChildReactClass = Widgets[child.reactClass];
            var childClassNames = { 
              'active': child.active };


            if (typeof child.classNames !== 'undefined') {
              _.assign(childClassNames, child.classNames);}

            var childStyle = classNames(childClassNames);


            var extraProps = {};

            if (typeof child.extraProps !== 'undefined') {
              _.forEach(child.extraProps, function (prop) {
                extraProps[prop.name] = prop.value;});}



            return (
              /*istanbul ignore next*/React.createElement(ChildReactClass, /*istanbul ignore next*/_extends({ key: i }, extraProps, { 
                id: child.id, className: childStyle, 
                onClick: self.handleClick.bind(null, child.id) }), 
              text(child), 
              icon(child), 
              childComponents(child)));});}





        return (
          /*istanbul ignore next*/React.createElement( /*istanbul ignore next*/'div', /*istanbul ignore next*/null, 
          /*istanbul ignore next*/React.createElement(SubComponent, /*istanbul ignore next*/_extends({}, this.props, { className: style, ref: getRef(this.props.componentData), 
            childComponents: childComponents(this.props.componentData) }))));} }, { key: 'handleClick', value: function handleClick(




      id) {
        ApplicationActions.click({ 
          'targetID': id });} }]);return Base;}(React.Component);





  return Base;}