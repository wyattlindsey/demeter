'use strict';

let Moment = require('moment');

let TimeServices = function () {

  let months = Moment.months();

  let now = new Moment();

  return { 
    convertFromMinutesAfterMidnight: function (offsetInMinutes) {
      let hour = Math.floor(offsetInMinutes / 60);
      let minute = offsetInMinutes % 60;

      return { 
        hour: hour, 
        minute: minute };}, 



    convertFromDaysAfterNewYear: function (offsetInDays, year) {

      let newYear = Moment(new Date(year, 0, 1));
      let newDate = newYear.add(offsetInDays, 'days');
      let date = { 
        year: newDate.Year(), 
        month: newDate.month(), 
        date: newDate.date() };

      return date;}, 


    getMinutesSinceMidnight: function (time) {
      return time.hour * 60 + time.minute;}, 


    getDaysSinceNewYear: function (date) {
      let newYear = Moment(new Date('January 1, 2016'));
      let current = Moment(new Date(date.year, date.month, date.date));
      let daysSinceNewYear = current.diff(newYear, 'days');
      return daysSinceNewYear;}, 


    formattedTime: function (time) {
      let timeString = '', 
      ampm = 'am', 
      hour = time.hour, 
      minute = time.minute;

      if (hour >= 12) ampm = 'pm';
      if (hour > 12) hour = hour - 12;
      if (hour === 0) {
        hour = 12;
        ampm = 'am';}


      hour = hour.toString();
      minute = minute.toString();

      if (minute < 10) minute = '0' + minute;

      timeString += hour + ':' + minute + ' ' + ampm;

      return timeString;}, 


    formattedDate: function (date) {
      let dateString = '';
      dateString += months[date.month] + ' ' + (date.date + 1) + ', ' + date.year;

      return dateString;} };}();





module.exports = TimeServices;