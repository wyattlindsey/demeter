/**
 *                                        validate.js
 *
 *    This module is meant to validate function parameters as a service for APIs in the application.  It's not meant to
 *    verify user input.  Here, errors will be thrown if something doesn't validate.  The module is designed to cause
 *    my programming mistakes to crash the application.
 *
 */

'use strict';

var ValidateArguments = require('validate-arguments');

var Validate = function () {

  return { 

    hasArguments: function /*istanbul ignore next*/hasArguments(args) {
      return _hasArguments(args);}, 


    isNumber: function /*istanbul ignore next*/isNumber(arg) {
      return _isNumber(arg);}, 


    isWithinRange: function /*istanbul ignore next*/isWithinRange(value, min, max) {
      return _isWithinRange(value, min, max);}, 


    time: function /*istanbul ignore next*/time(_time) {
      return validateTime(_time);}, 


    date: function /*istanbul ignore next*/date(_date) {
      return validateDate(_date);}, 


    latitude: function /*istanbul ignore next*/latitude(_latitude) {
      return validateLatitude(_latitude);}, 


    longitude: function /*istanbul ignore next*/longitude(_longitude) {
      return validateLongitude(_longitude);} };



  function validateTime(time) {

    _hasArguments(time);

    var args = ValidateArguments.validate(time, { 

      hour: { 
        isa: 'natural' }, 

      minute: { 
        isa: 'natural' } });



    _isWithinRange(time.hour, 0, 23);
    _isWithinRange(time.minute, 0, 59);

    if (!args.isValid()) {
      throw args.errorString();}}



  function validateDate(date) {

    _hasArguments(date.year);
    _hasArguments(date.month);
    _hasArguments(date.date);

    var args = ValidateArguments.validate(date, { 

      year: { 
        isa: 'natural' }, 

      month: { 
        isa: 'natural' }, 

      date: { 
        isa: 'natural' } });



    _isWithinRange(date.year, 0, 9999);
    _isWithinRange(date.month, 0, 11);
    _isWithinRange(date.date, 1, 31);

    if (!args.isValid()) {
      throw args.errorString();}}



  function validateLatitude(latitude) {

    _hasArguments(latitude);

    if (!_isWithinRange(latitude, -90, 90)) {
      throw new Error('bad arguments');}}



  function validateLongitude(longitude) {

    _hasArguments(longitude);

    _isWithinRange(longitude, -180, 180);}


  function _hasArguments(args) {
    if (typeof args !== 'undefined') {
      return true;} else 
    {
      throw new Error('empty arguments');}}



  function _isNumber(arg) {
    if (!isNaN(arg)) {
      return true;} else 
    {
      throw new Error('argument is not a number');}}



  function _isWithinRange(value, min, max) {
    if (value >= min && value <= max) {
      return true;} else 
    {
      throw new Error('argument out of range');}}}();





module.exports = Validate;