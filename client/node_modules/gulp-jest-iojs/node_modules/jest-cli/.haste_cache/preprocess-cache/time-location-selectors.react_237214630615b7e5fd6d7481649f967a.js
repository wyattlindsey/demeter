/*istanbul ignore next*/'use strict';Object.defineProperty(exports, "__esModule", { value: true });var _createClass = function () {function defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function (Constructor, protoProps, staticProps) {if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;};}();

var /*istanbul ignore next*/_timeServices = require('../../lib/time-services'); /*istanbul ignore next*/var _timeServices2 = _interopRequireDefault(_timeServices);
var /*istanbul ignore next*/_reactBootstrapNativeSlider = require('react-bootstrap-native-slider'); /*istanbul ignore next*/var _reactBootstrapNativeSlider2 = _interopRequireDefault(_reactBootstrapNativeSlider);

var /*istanbul ignore next*/_grid = require('../utility/grid'); /*istanbul ignore next*/var _grid2 = _interopRequireDefault(_grid);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self, call) {if (!self) {throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call && (typeof call === "object" || typeof call === "function") ? call : self;}function _inherits(subClass, superClass) {if (typeof superClass !== "function" && superClass !== null) {throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;}var React = require('react');var ViewportActions = require('../../actions/viewport-actions');var Slider = /*istanbul ignore next*/_reactBootstrapNativeSlider2.default; /*istanbul ignore next*/var 

TimeLocationSelectors = function (_React$Component) {_inherits(TimeLocationSelectors, _React$Component);
  function TimeLocationSelectors(props) {/*istanbul ignore next*/_classCallCheck(this, TimeLocationSelectors); /*istanbul ignore next*/return _possibleConstructorReturn(this, Object.getPrototypeOf(TimeLocationSelectors).call(this, 
    props));}_createClass(TimeLocationSelectors, [{ key: 'componentWillMount', value: function componentWillMount() 


    {} }, { key: 'render', value: function render() 



    {/*istanbul ignore next*/var _this2 = this;

      var changeTimeSliderValue = function changeTimeSliderValue(event) {
        var minutesPastMidnight = event.target.value;
        var newTime = /*istanbul ignore next*/_timeServices2.default.convertFromMinutesAfterMidnight(minutesPastMidnight);
        ViewportActions.setTime({ 
          time: newTime });};



      var changeDateSliderValue = function changeDateSliderValue(event) {
        var daysSinceNewYear = event.target.value;
        var newDate = /*istanbul ignore next*/_timeServices2.default.convertFromDaysAfterNewYear(daysSinceNewYear);
        ViewportActions.setDate({ 
          date: newDate });};



      var changeLatitudeSliderValue = function changeLatitudeSliderValue(event) {
        var latitude = event.target.value;
        ViewportActions.setLatitude({ 
          latitude: latitude });};



      var changeLongitudeSliderValue = function changeLongitudeSliderValue(event) {
        var longitude = event.target.value;
        ViewportActions.setLongitude({ 
          longitude: longitude });};



      var getValue = function getValue(slider) {
        return (/*istanbul ignore next*/_this2.props[slider]);};



      return (
        /*istanbul ignore next*/React.createElement( /*istanbul ignore next*/'div', /*istanbul ignore next*/null, 
        /*istanbul ignore next*/React.createElement( /*istanbul ignore next*/_grid2.default.Row, /*istanbul ignore next*/{ className: 'time-selector' }, 
        /*istanbul ignore next*/React.createElement( /*istanbul ignore next*/_grid2.default.Column, /*istanbul ignore next*/{ large: 2 }, /*istanbul ignore next*/'Time'), 


        /*istanbul ignore next*/React.createElement( /*istanbul ignore next*/_grid2.default.Column, /*istanbul ignore next*/{ large: 8 }, 
        /*istanbul ignore next*/React.createElement(Slider, /*istanbul ignore next*/{ 
          value: getValue('time'), 
          handleChange: changeTimeSliderValue, 
          step: 5, 
          max: 1439 // number of minutes in a day
          , min: 0 }))), 


        /*istanbul ignore next*/React.createElement( /*istanbul ignore next*/_grid2.default.Row, /*istanbul ignore next*/{ className: 'date-selector' }, 
        /*istanbul ignore next*/React.createElement( /*istanbul ignore next*/_grid2.default.Column, /*istanbul ignore next*/{ large: 2 }, /*istanbul ignore next*/'Date'), 


        /*istanbul ignore next*/React.createElement( /*istanbul ignore next*/_grid2.default.Column, /*istanbul ignore next*/{ large: 8 }, 
        /*istanbul ignore next*/React.createElement(Slider, /*istanbul ignore next*/{ 
          value: getValue('date'), 
          handleChange: changeDateSliderValue, 
          step: 1, 
          max: 364, 
          min: 0 }))), 


        /*istanbul ignore next*/React.createElement( /*istanbul ignore next*/_grid2.default.Row, /*istanbul ignore next*/{ className: 'latitude-selector' }, 
        /*istanbul ignore next*/React.createElement( /*istanbul ignore next*/_grid2.default.Column, /*istanbul ignore next*/{ large: 2 }, /*istanbul ignore next*/'Latitude'), 


        /*istanbul ignore next*/React.createElement( /*istanbul ignore next*/_grid2.default.Column, /*istanbul ignore next*/{ large: 8 }, 
        /*istanbul ignore next*/React.createElement(Slider, /*istanbul ignore next*/{ 
          value: getValue('latitude'), 
          handleChange: changeLatitudeSliderValue, 
          step: 1, 
          max: 90, 
          min: -90 }))), 


        /*istanbul ignore next*/React.createElement( /*istanbul ignore next*/_grid2.default.Row, /*istanbul ignore next*/{ className: 'longitude-selector' }, 
        /*istanbul ignore next*/React.createElement( /*istanbul ignore next*/_grid2.default.Column, /*istanbul ignore next*/{ large: 2 }, /*istanbul ignore next*/'Longitude'), 


        /*istanbul ignore next*/React.createElement( /*istanbul ignore next*/_grid2.default.Column, /*istanbul ignore next*/{ large: 8 }, 
        /*istanbul ignore next*/React.createElement(Slider, /*istanbul ignore next*/{ 
          value: getValue('longitude'), 
          handleChange: changeLongitudeSliderValue, 
          step: 1, 
          max: 180, 
          min: -180 })))));} }]);return TimeLocationSelectors;}(React.Component); /*istanbul ignore next*/exports.default = 







TimeLocationSelectors;